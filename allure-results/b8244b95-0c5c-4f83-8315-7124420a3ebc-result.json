{"name": "test_total_price_updates_on_dropdown_selection", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_text(\"Standard Silver 33”x81”\", exact=True)", "trace": "page = <Page url='https://www.squaresigns.com/product/retractable-banners/'>\n\n    def test_total_price_updates_on_dropdown_selection(page):\n        banner = RetractableBanners(page)\n    \n        # Step 1: Retrieve base price from backend fixture\n        base_price = get_base_price()\n    \n        # Step 2: Deselect default roll-up stand and verify the base price is displayed\n        banner.unselect_default_option()\n        banner.assert_price_is(base_price)\n    \n        # Step 3: Select a new roll-up stand from dropdown\n        first_option = get_roll_up_options()[0]\n>       banner.select_dropdown_option_by_text(first_option['name'])\n\ntests/retractable_banners/pricing/test_total_price.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/retractable_banners.py:84: in select_dropdown_option_by_text\n    self.page.get_by_text(option_text, exact=True).click()\nvenv/lib/python3.13/site-packages/playwright/sync_api/_generated.py:15512: in click\n    self._sync(\nvenv/lib/python3.13/site-packages/playwright/_impl/_locator.py:160: in click\n    return await self._frame.click(self._selector, strict=True, **params)\nvenv/lib/python3.13/site-packages/playwright/_impl/_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\nvenv/lib/python3.13/site-packages/playwright/_impl/_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x1078e9ba0>, cb = <function Channel.send.<locals>.<lambda> at 0x107a272e0>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_text(\"Standard Silver 33”x81”\", exact=True)\n\nvenv/lib/python3.13/site-packages/playwright/_impl/_connection.py:528: TimeoutError"}, "start": 1747070243046, "stop": 1747070273513, "uuid": "aae41c28-3145-41d0-8a10-cba541911220", "historyId": "8dcca6c807ebcfaf6796d3fbcf86dde7", "testCaseId": "8dcca6c807ebcfaf6796d3fbcf86dde7", "fullName": "tests.retractable_banners.pricing.test_total_price#test_total_price_updates_on_dropdown_selection", "labels": [{"name": "parentSuite", "value": "tests.retractable_banners.pricing"}, {"name": "suite", "value": "test_total_price"}, {"name": "host", "value": "Davit-Haroyan.local"}, {"name": "thread", "value": "51193-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.retractable_banners.pricing.test_total_price"}]}